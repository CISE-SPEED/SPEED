name: Main

env:
  ENVIRONMENT: "${{ github.ref_name == 'main' && 'production' || 'preview' }}"
  PROD_FLAG: "${{ github.ref_name == 'main' && '--prod' || '' }}"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  frontend:
    name: Build, Test & Deploy Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: speed-frontend
    steps:
      - uses: actions/checkout@v4.2.1

      - name: Install dependencies
        run: npm install

      # - name: Run tests
      #   run: npm install

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ env.ENVIRONMENT }} --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}

      - name: Build Project Artifacts
        run: vercel build ${{ env.PROD_FLAG }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy ${{ env.PROD_FLAG }} --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  frontend:
    name: Build, Test & Deploy Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: speed-backend
    steps:
      - uses: actions/checkout@v4.2.1

      - name: Install dependencies
        run: npm install

      # - name: Run tests
      #   run: npm install

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ env.ENVIRONMENT }} --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_BACKEND_PROJECT_ID }}

      - name: Build Project Artifacts
        run: vercel build ${{ env.PROD_FLAG }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy ${{ env.PROD_FLAG }} --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
